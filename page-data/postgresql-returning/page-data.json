{"componentChunkName":"component---src-templates-post-tsx","path":"/postgresql-returning/","result":{"data":{"markdownRemark":{"html":"<p><img src=\"https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdfhdXW%2Fbtq665WfGR8%2FQX4BBDAwhiz52sGi08Ychk%2Fimg.png\" alt=\"POSTGRESQL\">\n<br/><br/></p>\n<p>PostgreSQL에는 <code class=\"language-text\">DML(INSERT, UPDATE, DELETE)</code> 실행 후, affected rows 갯수 대신 정보를 반환해주는 구문이 있다.</p>\n<p>그것이 바로 <code class=\"language-text\">RETURNING</code> 구문이다</p>\n<p>사용방법은 <strong>아주아주</strong> 간단하다!!  </p>\n<p><code class=\"language-text\">INSERT, UPDATE, DELETE</code>문 뒤에 <code class=\"language-text\">RETURNING *</code> 을 쓰면 실행 결과 ROWS를 반환한다.  </p>\n<br/>\n<p>이 흥미로운 문법을 아래의 활용 예제를 보면서 <code class=\"language-text\">RETURNING</code> 을 어떻게 쓸 수 있는지 자세히 살펴보자👩🤟</p>\n<br/>\n<hr>\n<h2 id=\"examples\" style=\"position:relative;\"><a href=\"#examples\" aria-label=\"examples permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Examples</h2>\n<br/>\n<h3 id=\"활용1-select-key\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A91-select-key\" aria-label=\"활용1 select key permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용1. SELECT KEY</h3>\n<br/>\n<p><code class=\"language-text\">spring</code> 환경에서 우리는 <code class=\"language-text\">insert(혹은 update)</code>에서 SQL 실행 후 특정 값을 반환하고 싶을 때,\n대게의 경우에 mybatis(혹은 ibatis)의 <code class=\"language-text\">&lt;selectKey&gt;</code>를 이용하여 이렇게 썼을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//old\n&lt;insert&gt;\n    INSERT INTO BOARD(BOARD_ID, TITLE, CONTENT)\n    VALUES(&#39;A01&#39;, &#39;게시글 타이틀&#39;, &#39;게시글 내용&#39;)\n    &lt;selectKey keyProperty=&quot;&quot; resultType=&quot;&quot; order=&quot;AFTER&quot; &gt;\n        SELECT BOARD_ID\n    &lt;/selectKey&gt;        \n&lt;/insert&gt;</code></pre></div>\n<p><br/><br/></p>\n<p>하지만 <code class=\"language-text\">PostgreSQL</code> 에서는 mybatis없이 이렇게도 쓸 수 있다!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//new\n&lt;insert&gt;\n    INSERT INTO BOARD(BOARD_ID, TITLE, CONTENT)\n    VALUES(&#39;A01&#39;, &#39;게시글 타이틀&#39;, &#39;게시글 내용&#39;)\n    RETURNING BOARD_ID\n&lt;/insert&gt;</code></pre></div>\n<p><br/><br/></p>\n<p>확실히 <code class=\"language-text\">insert</code>안에 <code class=\"language-text\">select</code>가 들어가있는것 보다 가독성도 좋아보이고,<br>\n<code class=\"language-text\">반환(RETURNING)</code>한다는 의미와 해달 컬럼이 더 잘 전달된다.\n<br/><br/></p>\n<p><img src=\"https://jjalbot.com/media/2020/03/QPPbAIEl7V/SY9jdwKFd.jpeg\" alt=\"https://jjalbot.com/media/2020/03/QPPbAIEl7V/SY9jdwKFd.jpeg\"></p>\n<p>편안~\n<br/><br/><br/></p>\n<h3 id=\"활용2-upsert\" style=\"position:relative;\"><a href=\"#%ED%99%9C%EC%9A%A92-upsert\" aria-label=\"활용2 upsert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>활용2. UPSERT</h3>\n<br/>\n<p>두번째 활용 예는 <code class=\"language-text\">UPSERT</code>이다. <br/>\n많은 사용자들이 알듯이 PostgreSQL에는 오라클의 <code class=\"language-text\">MERGE</code>문이 없다 T-T<br>\n그래서 오라클의 그것과 같은 동작을 위해 우리는 PostgreSQL의 <code class=\"language-text\">WITH</code>를 활용할 수 있다.</p>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//update할 row가 없으면 insert 하는 upsert(merge)문\n\nWITH UPSERT AS (                            \n    UPDATE BOARD\n    SET TITLE = &#39;게시글 타이틀 수정&#39;\n        , CONTENT = &#39;게시글 내용 수정&#39;\n    WHERE BOARD_ID = &#39;A01&#39;\n    RETURNING *\n)\nINSERT INTO BOARD(\n    BOARD_ID\n    , TITLE\n    , CONTENT\n)\nSELECT\n    BOARD_ID\n    , TITLE\n    , CONTENT\nWHERE NOT EXISTS ( SELECT * FROM UPSERT )</code></pre></div>\n<p><br/><br/></p>\n<p>PostgreSQL의 <code class=\"language-text\">UPSERT</code>문은 <a href=\"https://didue.github.io/postgresql-upsert/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">여기</a>에서 이전에 한번 다룬적이 있으니, 두 SQL을 비교해보면서 본인의 상황에 적절한 것을 골라서 써볼 수 있도록 하자!\n<br/><br/>\n+) 이 글은 <a href=\"https://fascinate-zsoo.tistory.com/24\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">여기(이전 블로그)</a>에서 옮겨왔습니다.🙋‍♀️\n<br/><br/></p>\n<hr>\n<h4 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>참고</strong></h4>\n<ul>\n<li>PostgreSQL With : <a href=\"https://www.postgresql.org/docs/9.4/queries-with.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.postgresql.org/docs/9.4/queries-with.html</a></li>\n<li>PostgreSQL Insert Multi-Rows : <a href=\"https://www.postgresqltutorial.com/postgresql-insert-multiple-rows/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.postgresqltutorial.com/postgresql-insert-multiple-rows/</a></li>\n</ul>","excerpt":"POSTGRESQL\n PostgreSQL에는  실행 후, affected rows 갯수 대신 정보를 반환해주는 구문이 있다. 그것이 바로  구문이다 사용방법은 아주아주 간단하다!!   문 뒤에  을 쓰면 실행 결과 ROWS를 반환한다.   이 흥미로…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/postgresql-returning/#examples\">Examples</a></p>\n<ul>\n<li><a href=\"/postgresql-returning/#%ED%99%9C%EC%9A%A91-select-key\">활용1. SELECT KEY</a></li>\n<li><a href=\"/postgresql-returning/#%ED%99%9C%EC%9A%A92-upsert\">활용2. UPSERT</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/postgresql-returning/"},"frontmatter":{"title":"(Postgresql) Returning 구문 정보 리턴 받기","date":"Jul 23, 2021","tags":["PostgresQL"],"keywords":["PostgresQL","Returning"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/postgresql-returning/","series":[],"lastmod":"2021-07-23"}},"staticQueryHashes":["2027115977","694178885"]}