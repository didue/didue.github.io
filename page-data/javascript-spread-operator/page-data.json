{"componentChunkName":"component---src-templates-post-tsx","path":"/javascript-spread-operator/","result":{"data":{"markdownRemark":{"html":"<p>근래 JavaScript를 아주 씐나게 공부하고 있는 와중에, <code class=\"language-text\">ECMA2015(ES6)</code>에서 추가된 <strong>새로운 연산자</strong>가 있어 공부해보았다.😛\n<br/><br/></p>\n<h2 id=\"spread-operator\" style=\"position:relative;\"><a href=\"#spread-operator\" aria-label=\"spread operator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spread Operator</h2>\n<p>Spread 문법은 <code class=\"language-text\">...</code> 연산자를 통해서 사용할 수 있다.</p>\n<br/>\n<p>MDN 설명에 의하면,</p>\n<blockquote>\n<p>전개 구문을 사용하면 배열이나 문자열과 같이 반복 가능한 문자를 0개 이상의 인수 (함수로 호출할 경우) 또는 요소 (배열 리터럴의 경우)로 확장하여, 0개 이상의 키-값의 쌍으로 객체로 확장시킬 수 있습니다.</p>\n</blockquote>\n<br/>\n<p>글만으론 이해가 쉽지않은데 코드를 보면 이해하는데 조금 더 도움이 된다.\n<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var arr = [1];\nvar items = [2, 3];\n\narr.push(...items);\nconsole.log(arr);        //Expected Output : [1, 2, 3]</code></pre></div>\n<br/>\n<p>위 코드에서 <code class=\"language-text\">arr</code>출력을 보면 <code class=\"language-text\">items</code>의 요소가 <code class=\"language-text\">arr</code>에 넣어진 것을 볼 수있다.  </p>\n<p>이걸 통해 확인할 수 있는 것은 <code class=\"language-text\">...</code>연산자를 통해서 <code class=\"language-text\">items</code>의 요소가 전개되어져 <code class=\"language-text\">arr</code>에 넣어졌고, 이것은 곧 그간 우리가 자주 사용하던 <code class=\"language-text\">arr.concat()</code>을 대체할 만 하다는 것을 알게되었다!</p>\n<p><br/><br/></p>\n<p><img src=\"https://media.giphy.com/media/dQNP6OnyFUePu/giphy.gif\" alt=\"ThatsCool\"></p>\n<p>Spread연산자를 처음 본 나.....ㅎㅎ\n<br/><br/></p>\n<p>그렇담 이제 Spread문법(이하 전개구문)을 활용한 구문 선언할 수 있는 유형을 알아보자 </p>\n<br/>\n<h3 id=\"함수호출\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%ED%98%B8%EC%B6%9C\" aria-label=\"함수호출 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수호출</h3>\n<br/>\n<p>일반적으로 배열의 요소를 함수의 인자로 사용하려고 할 때,<br>\n<code class=\"language-text\">Function.prototype.apply()</code>를 사용하였는데 '전개구문'을 사용하면 아래와 같이 바뀔수 있다.\n<br/><br/></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"> function myFunction(x,y,z){ }\n var args = [0, 1, 2];\n\n //before\n myFunction.apply(null, args);\n\n//after \nmyFunction.apply(...args);</code></pre></div>\n<br/>\n<h3 id=\"배열리터럴-과-문자열\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4%EB%A6%AC%ED%84%B0%EB%9F%B4-%EA%B3%BC-%EB%AC%B8%EC%9E%90%EC%97%B4\" aria-label=\"배열리터럴 과 문자열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열리터럴 과 문자열</h3>\n<br/>\n<p>전개구문은 기존의 <code class=\"language-text\">push()</code>, <code class=\"language-text\">splice()</code>, <code class=\"language-text\">concat()</code> 등을 조합해서 사용하는 코드를 훨씬 간단하게 만들어줄 수도 있다.\n<br/><br/></p>\n<p><strong>1) 배열 복사</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var arr1 = [a, b, c];\n\n//before\nvar arr2 = arr1.splice();    \n//after\nvar arr = [...arr];</code></pre></div>\n<br/>\n<p><strong>2) 배열 연결</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var arr1 = [1,2,3];\nvar arr2 = [4,5,6];\n\n//before\narr1 = arr1.concat(arr2);    \n//after\narr1 = [...arr1, ...arr2];    </code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"객체리터럴\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4%EB%A6%AC%ED%84%B0%EB%9F%B4\" aria-label=\"객체리터럴 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체리터럴</h3>\n<p>ECMAScript2018에서 추가된 <code class=\"language-text\">객체 리터럴</code>은 객체가 소유한 열거형 프로퍼티를 새로운 객체로 복사할 수 있다.<br>\n얕은 복사(prototype 제외) 또는 객체병합은 <code class=\"language-text\">Object.assign()</code>대신 <code class=\"language-text\">...</code>를 사용한 전개구문으로 이용할 수 있다.</p>\n<p>객체리터럴의 예제 코드는 MDN에 설명이 더 상세하니 하단의 링크를 참고하자!</p>\n<h3 id=\"-rest-parameter--\" style=\"position:relative;\"><a href=\"#-rest-parameter--\" aria-label=\" rest parameter   permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>**:: Rest parameter :: **</h3>\n<p>Rest파라미터도 마찬가지로 전개구문(...연산자) 사용할 수 있다. </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function print(...param){\n  param.forEach((e) =&gt; {\n    console.log(e);\n  }\n}\n\nprint(&#39;apple&#39;, &#39;banana&#39;, &#39;grape&#39;);         \n/*\napple\nbanana\ngrape\n*/</code></pre></div>\n<hr>\n<h3 id=\"2-문서\" style=\"position:relative;\"><a href=\"#2-%EB%AC%B8%EC%84%9C\" aria-label=\"2 문서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>2. 문서</strong></h3>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Operators/Spread_syntax\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MDN Documents > 전개 구문</a></p>","excerpt":"근래 JavaScript를 아주 씐나게 공부하고 있는 와중에, 에서 추가된 새로운 연산자가 있어 공부해보았다.😛\n Spread Operator Spread 문법은  연산자를 통해서 사용할 수 있다. MDN 설명에 의하면, 전개 구문을 사용하면 배열이…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/javascript-spread-operator/#spread-operator\">Spread Operator</a></p>\n<ul>\n<li><a href=\"/javascript-spread-operator/#%ED%95%A8%EC%88%98%ED%98%B8%EC%B6%9C\">함수호출</a></li>\n<li><a href=\"/javascript-spread-operator/#%EB%B0%B0%EC%97%B4%EB%A6%AC%ED%84%B0%EB%9F%B4-%EA%B3%BC-%EB%AC%B8%EC%9E%90%EC%97%B4\">배열리터럴 과 문자열</a></li>\n<li><a href=\"/javascript-spread-operator/#%EA%B0%9D%EC%B2%B4%EB%A6%AC%ED%84%B0%EB%9F%B4\">객체리터럴</a></li>\n<li><a href=\"/javascript-spread-operator/#-rest-parameter--\">**:: Rest parameter :: **</a></li>\n<li><a href=\"/javascript-spread-operator/#2-%EB%AC%B8%EC%84%9C\"><strong>2. 문서</strong></a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/javascript-spread-operator/"},"frontmatter":{"title":"Javascript ES6 Spread 연산자(...)","date":"Jul 23, 2021","tags":["JavaScript","ES6","spread operator"],"keywords":["JavaScript","ES6","spread operator"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/javascript-spread-operator/","series":[],"lastmod":"2021-07-23"}},"staticQueryHashes":["2027115977","694178885"]}