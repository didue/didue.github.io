{"componentChunkName":"component---src-templates-post-tsx","path":"/TIL/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"null-병합-연산자-\" style=\"position:relative;\"><a href=\"#null-%EB%B3%91%ED%95%A9-%EC%97%B0%EC%82%B0%EC%9E%90-\" aria-label=\"null 병합 연산자  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>null 병합 연산자 '??'</h2>\n<p><br/><br/>\n<img src=\"https://img1.daumcdn.net/thumb/R800x0/?scode=mtistory2&#x26;fname=https%3A%2F%2Ft1.daumcdn.net%2Fcfile%2Ftistory%2F995C434C5C07CDA015\" alt=\"null\">\n<br/><br/>\nnull 병합 연산자 <code class=\"language-text\">??</code>를 사용하면 짧은 문법으로 여러 연산자 중 그 값이 '확정'되어 있는 변수를 찾을 수 있습니다.\n<br/><br/>\n<code class=\"language-text\">x</code> 변수의 값은 변수 <code class=\"language-text\">a</code>가 <code class=\"language-text\">null</code>도 아니고  <code class=\"language-text\">undefined</code>가 아니면 <code class=\"language-text\">a</code>가,\n그렇지 않을 경우는 <code class=\"language-text\">b</code>가 되도록 하고자 할 때<br/>\n우리는 구식 문법으로 아래와 코드를 작성했습니다.\n<br/><br/></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//old\n//if~else문\nlet x;\nif(a !== null &amp;&amp; a!== undefined){\n    x = a;\n}else {\n    x = b;\n}\n\nor \n\n//삼항연산자\nlet x = (a !== null &amp;&amp; a!== undefined)? a : b;</code></pre></div>\n<br/>\n`if~else` 문 또는 비교연산자와 논리연산자를 사용하면 코드길이가 길어져 가독성이 떨어지게 됩니다.<br/>\n이 때, null 병합연산자 `??` 사용해서 코드를 작성하면 이렇게 표현할 수 있습니다. <br/>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//new\nlet x = a ?? b;</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"연산자-우선순위\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\" aria-label=\"연산자 우선순위 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자 우선순위</h3>\n<p><code class=\"language-text\">??</code> 연산자는 <code class=\"language-text\">5번째 우선순위</code>로 꽤 낮습니다.\n그렇기 때문에 연산자가 복잡한 표현식안에서는 <code class=\"language-text\">괄호</code>를 사용하여 표현하는 방법이 좋습니다. <br/>\n<br/><br/></p>\n<p><code class=\"language-text\">??</code>연산자는 javascript 스펙에 추가된 지 얼마 안 된 문법으로, 구식 브라우저(<del>인터넷 익스플로러 라거나....IE라거나...</del>)에서는 바벨과 같은 폴리필이 필요합니다.<br/><br/></p>\n<p>또한 <code class=\"language-text\">??</code> 연산자에는 자바스크립트 언어에서 규정한 <code class=\"language-text\">제약사항</code>이 있습니다.<br/>\n<b>안전성 관련 이슈 때문에 <code class=\"language-text\">??</code>연산자는 <code class=\"language-text\">&amp;&amp;(AND)</code>나 <code class=\"language-text\">||(OR)</code>연산자와 함께 사용할수 없습니다.</b><br/><br/></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">//Syntax Error : Uxexpected token &#39;??&#39;\nlet x = 1 &amp;&amp; 2 ?? 3;</code></pre></div>\n<p><br/>제약을 피하려면 아래 예시처럼 <code class=\"language-text\">괄호</code>를 사용할 수 있습니다. <br/><br/></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let x = (1 &amp;&amp; 2) ?? 3;\nconsole.log(x);         //2</code></pre></div>","excerpt":"null 병합 연산자 '??' \nnull\n\nnull 병합 연산자 를 사용하면 짧은 문법으로 여러 연산자 중 그 값이 '확정'되어 있는 변수를 찾을 수 있습니다. \n\n 변수의 값은 변수 가 도 아니고  가 아니면 가, \n그렇지 않을 경우는 가 되도록 …","tableOfContents":"<ul>\n<li>\n<p><a href=\"/TIL/#null-%EB%B3%91%ED%95%A9-%EC%97%B0%EC%82%B0%EC%9E%90-\">null 병합 연산자 '??'</a></p>\n<ul>\n<li><a href=\"/TIL/#%EC%97%B0%EC%82%B0%EC%9E%90-%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84\">연산자 우선순위</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/TIL/"},"frontmatter":{"title":"(TIL#1) 모던Javascript - null 병합연산자 ??","date":"Jul 23, 2021","tags":["TIL","JavaScript"],"keywords":["TIL","JavaScript","null병합연산자","??연산자"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/TIL/","series":[],"lastmod":"2021-07-23"}},"staticQueryHashes":["2027115977","694178885"]}