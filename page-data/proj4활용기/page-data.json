{"componentChunkName":"component---src-templates-post-tsx","path":"/proj4활용기/","result":{"data":{"markdownRemark":{"html":"<p>개인프로젝트 또는 현업에서 종종 <a href=\"https://www.data.go.kr/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">공공데이터포털</a>의 데이터를 활용할 일이 꽤나 있습니다.</p>\n<p>특히 최근에는 지도API를 활용한 업무가 많아졌습니다.</p>\n<p>그런데..! 데이터 제공처마다 <span style=\"color:cornflowerblue;\"><em>각각 다른 좌표 투영계를 사용</em></span>하여 좌표를 제공하여 (<del>표준통일같은건 없는거니..</del>)</p>\n<p>현재 사용중인 카카오맵SDK에서 기본으로하는 위경도 좌표계(위도 38.xxxx, 경도 126.xxx의 표시방법)로 좌표계 변환이 필요했습니다.</p>\n<p>사실 지도 투영과 좌표계에 대한 내용은 GIS에 대한 좀 더 깊은 공부가 필요하지만, 저는 라이브러리를 사용하여 빠르고 간단하게 변환하는 방법을 선택해보겠습니다.😏</p>\n<br/>\n<hr>\n<br/>\n<p>사용한 라이브러리는 <code class=\"language-text\">proj.js</code>라는 JavaScript 라이브러리로 <code class=\"language-text\">지리 좌표 변환 소프트웨어</code>입니다.</p>\n<p>현재는 8버전까지 나와있으나, 릴리즈 4버전으로도 충분하여 <code class=\"language-text\">proj4</code>를 사용하도록 하겠습니다.\n<br/><br/>\n변환하실 <b>좌표계의 EPSG 코드는 <a href=\"http://www.gisdeveloper.co.kr/?p=8942\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">여기</a>를 참고</b>하시면 됩니다!</p>\n<p><br/><br/></p>\n<h2 id=\"nodejs-샘플코드\" style=\"position:relative;\"><a href=\"#nodejs-%EC%83%98%ED%94%8C%EC%BD%94%EB%93%9C\" aria-label=\"nodejs 샘플코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Node.js 샘플코드</strong></h2>\n<br/>\n<p><code class=\"language-text\">node.js</code> 환경에서 사용할 경우 npm으로 <code class=\"language-text\">proj4</code> 라이브러리를 설치해줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install --save proj4</code></pre></div>\n<br/>\n<p><code class=\"language-text\">proj.js</code>의 기본구문은 아래와 같습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let coord = proj4(proj4(fromProjection, toProjection, coordinates);\n\n//fromProjection : 변환 대상 좌표계\n//toProjection : 변환 목표 좌표계\n//coordinates : 객체 또는 배열 형태 (예시 {x:&#39;x&#39;, y:&#39;y&#39;} 또는 [x,y]) </code></pre></div>\n<br/>\n<p>기본구문을 바탕으로 좌표변환하는 코드는 아래처럼 활용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var proj4 = require(&#39;proj4&#39;);\n\n//UTM-K 좌표계\nvar eps2097 = &quot;+proj=tmerc +lat_0=38 +lon_0=127 +k=1 +x_0=200000 +y_0=500000 +ellps=bessel +units=m +no_defs&quot;;\n//GRS80(중부원점) 좌표계\nvar grs80 = &quot;+proj=tmerc +lat_0=38 +lon_0=127.5 +k=0.9996 +x_0=1000000 +y_0=2000000 +ellps=GRS80 +units=m +no_defs&quot;;\n//wgs84(위경도)좌표계\nvar wgs84 = &quot;+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees&quot;;\n\nvar grs80P = proj4(grs80, wgs84, [893204, 1652210]);\nconsole.log(grs80P);\n\nvar eps2097p = proj4(eps2097, wgs84, [188387.5628, 183119.8984]);\nconsole.log(eps2097p);</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"java-샘플코드\" style=\"position:relative;\"><a href=\"#java-%EC%83%98%ED%94%8C%EC%BD%94%EB%93%9C\" aria-label=\"java 샘플코드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Java 샘플코드</strong></h2>\n<br/>\n<p>아래의 External JAR파일을 lib폴더에 import하시고 사용하시면 <code class=\"language-text\">proj4</code>를 <code class=\"language-text\">Java</code>환경에서 이용하실 모든 준비가 끝났습니다.😄\n<br/><br/></p>\n<p><code class=\"language-text\">jar파일</code>은 <a href=\"https://fascinate-zsoo.tistory.com/24\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">여기(이전 블로그)</a>에 가시면 다운받으실 수 있습니다!😎\n<br/><br/></p>\n<p><code class=\"language-text\">proj</code> 기본 구문은 동일하며 <code class=\"language-text\">Java</code>에서는 <code class=\"language-text\">ProjCoordinate</code> 클래스를 이용하여 좌표를 변환합니다!</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import org.locationtech.proj4j.BasicCoordinateTransform;\nimport org.locationtech.proj4j.CRSFactory;\nimport org.locationtech.proj4j.CoordinateReferenceSystem;\nimport org.locationtech.proj4j.ProjCoordinate;\n\npublic class TransCoord {\n\n  public ProjCoordinate transform(String strLon, String strLat) {\n\n    //parse to Double\n    Double dblLon = Double.parseDouble(strLon);\n    Double dblLat = Double.parseDouble(strLat);\n\t\t\t\n    CRSFactory factory = new CRSFactory();\n    CoordinateReferenceSystem grs80 = factory.createFromName(&quot;EPSG:5179&quot;); \n    CoordinateReferenceSystem wgs84 = factory.createFromName(&quot;EPSG:4326&quot;);\n    BasicCoordinateTransform transformer = new BasicCoordinateTransform(grs80, wgs84);\n\t\n    ProjCoordinate beforeCoord = new ProjCoordinate(dblLon, dblLat);\n    ProjCoordinate afterCoord = new ProjCoordinate();\n    \n    //변환된 좌표 \n    System.out.println(afterCoord.x + &quot;,&quot; + afterCoord.y);\n    \n    return transformer.transform(beforeCoord, afterCoord);\n  }\n  \n}</code></pre></div>\n<p><br/><br/></p>\n<hr>\n<br/>\n좌표변환 코드를 보면 세상짧고 별거없어 보이는 코드이지만....\n<p>저 라이브러리와 코드를 찾기위해 몇번이고 구글을 떠돌던 며칠전의 저와 같은 모습을 하고 계실 또 다른 분들이 도움이 되셨기를...!🙋‍♀️</p>\n<p><br/><br/>\n+) 이 글은 <a href=\"https://fascinate-zsoo.tistory.com/24\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">여기(이전 블로그)</a>에서 옮겨왔습니다.</p>","excerpt":"개인프로젝트 또는 현업에서 종종 공공데이터포털의 데이터를 활용할 일이 꽤나 있습니다. 특히 최근에는 지도API를 활용한 업무가 많아졌습니다. 그런데..! 데이터 제공처마다 각각 다른 좌표 투영계를 사용하여 좌표를 제공하여 (표준통일같은건 없는거니..…","tableOfContents":"<ul>\n<li><a href=\"/proj4%ED%99%9C%EC%9A%A9%EA%B8%B0/#nodejs-%EC%83%98%ED%94%8C%EC%BD%94%EB%93%9C\"><strong>Node.js 샘플코드</strong></a></li>\n<li><a href=\"/proj4%ED%99%9C%EC%9A%A9%EA%B8%B0/#java-%EC%83%98%ED%94%8C%EC%BD%94%EB%93%9C\"><strong>Java 샘플코드</strong></a></li>\n</ul>","fields":{"slug":"/proj4활용기/"},"frontmatter":{"title":"proj4.js로 좌표계 변환하기 (중분원점 좌표계 > WGS84 좌표계)","date":"Jul 23, 2021","tags":["Javascript"],"keywords":["Javascript","proj4","좌표계변환","WGS84"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/proj4활용기/","series":[],"lastmod":"2021-07-23"}},"staticQueryHashes":["2027115977","694178885"]}